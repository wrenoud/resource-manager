script(type='text/javascript').
  var local_data = !{(data && data.properties) ? JSON.stringify(data.properties) : "[]"};

  var toggleComputed = function(){
    var index = this.id.split("_")[1];
    if(this.checked){
      $('#properties_'+index+'_equation').prop('disabled', false);
      $('#properties_'+index+'_default').prop('disabled', true);
    }else{
      $('#properties_'+index+'_equation').prop('disabled', true);
      $('#properties_'+index+'_default').prop('disabled', false);
    }
  }

  var updateSlug = function(e){
    var index = this.id.split("_")[1];
    var urnId = '#properties_'+index+'_'+$(this).data('update');

    var val = $(this).val();
    var previous = $(this).data('previous');
    
    console.log(previous, urnId);
    
    if(previous !== undefined && $(urnId).val() !== "")
    {
      var current_slug = $(urnId).val();
      if(current_slug === slugify(previous)){
        $(urnId).val(slugify(val));
      }
    }else{
      $(urnId).val(slugify(val));
    }

    $(this).data('previous', val);
  }

  $(document).ready(function() {
    var properties = $('#properties').sheepIt({
        separator: '',
        allowRemoveLast: false,
        allowRemoveCurrent: true,
        allowRemoveAll: false,
        allowAdd: true,
        allowAddN: false,
        //maxFormsCount: 10,
        minFormsCount: 1,
        iniFormsCount: 1,
        afterAdd: function(source, newForm) {
          $(newForm).find("input[type=checkbox]").click(toggleComputed);
          $(newForm).find("input[data-action=update]").on('change', updateSlug);
          $(newForm).find("input[data-action=update]").on('focus', updateSlug);
        }
    });

  });

#properties
  #properties_noforms_template
    p No Properties
  #properties_template
    div.panel.panel-default
      div.panel-heading
        h3.panel-title.clearfix Property Definition
          button.btn.btn-xs.btn-default.pull-right(id="properties_remove_current")
            span.glyphicon.glyphicon-remove

      div.panel-body
        div.row
          div.col-md-2.col-xs-6
            div.form-group
              input.form-control(type='text' data-action='update', data-update='urn', id='properties_#index#_name', name='properties[#index#][name]', placeholder="Name", required)
          div.col-md-2.col-xs-6
            div.form-group
              input.form-control(type='text', id='properties_#index#_urn', name='properties[#index#][urn]', placeholder="URN", pattern="[a-z0-9-]+", title="a-z, 0-9, or hyphens (-)", required)
          div.col-md-2.col-xs-12
            div.form-group
              select.form-control(id='properties_#index#_type', name='properties[#index#][type]')
                option(value="", disabled, selected) Select type
                each val in PropertyTypes
                  option(value=val.id)= val.name
          div.col-md-3.col-xs-6
            div.input-group
              span.input-group-addon
                input(type='checkbox', id='properties_#index#_computed', name='properties[#index#][computed]', value="true")
              input.form-control(type='text', id='properties_#index#_equation', name='properties[#index#][equation]', placeholder="Equation", disabled='disabled')
          div.col-md-3.col-xs-6
            div.form-group
              input.form-control(type='text', id='properties_#index#_default', name='properties[#index#][default]', placeholder="Default Value")
  #properties_controls.form-group
    div
      #properties_add
        button.btn.btn-default
          span.glyphicon.glyphicon-plus
          |  Add Property
      #properties_add_n
        .input-group-btn
          button.btn.btn-default(id="properties_add_n_input")
            span.glyphicon.glyphicon-plus
            |  Add
        input.form-control(type='text', id='properties_add_n_input', placeholder="# Properties")
